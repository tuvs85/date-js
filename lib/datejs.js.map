{"version":3,"file":"datejs.js","sources":["../src/module/toDate.js","../src/module/formatTime.js","../src/module/upZero.js","../src/module/toNumber.js","../src/module/formatTimeZone.js","../src/index.js","../src/module/formatConfig.js","../src/module/fixNumber.js","../src/module/isDateJs.js"],"sourcesContent":["function toDate(time){\r\n  if ((typeof time).toLowerCase() === 'object')return time;\r\n  return new Date(time);\r\n}\r\nexport default toDate\r\n","import toDate from \"./toDate\";\r\nfunction formatTime(time){\r\n  if (!time)return new Date();\r\n  if ((typeof time).toLowerCase() === 'number'){\r\n    return toDate(((time).toString().length === 10)?(time * 1000): time)\r\n  }\r\n  time = time.replace(/-/ig, '/');\r\n  if (!Number.isNaN(Number(time))){\r\n    return toDate(Number(time));\r\n  }\r\n  return toDate(time);\r\n}\r\nexport default formatTime\r\n","function upZero(value){\r\n  if (!value)return '00';\r\n  if (value.toString().length>=2)return String(value);\r\n  return `0${value}`\r\n}\r\nexport default upZero\r\n","function toNumber(value){\r\n  if ((typeof value).toLowerCase() === 'number' )return value;\r\n  return parseFloat(value);\r\n}\r\nexport default toNumber\r\n","import toNumber from \"./toNumber\";\r\nconst zoneMap = {\r\n\r\n}\r\nfunction formatTimeZone(timezone){\r\n  if ((typeof timezone).toLowerCase() === 'number'){\r\n    return timezone\r\n  }\r\n  if (Number.isNaN(Number(timezone))){\r\n    return zoneMap[timezone]\r\n  }\r\n  return toNumber(timezone)\r\n}\r\nexport default formatTimeZone\r\n","import formatTime from \"./module/formatTime\";\r\nimport formatConfig from \"./module/formatConfig\";\r\nimport upZero from \"./module/upZero\";\r\nimport upTime from \"./module/upTime\";\r\nimport formatTimeZone from \"./module/formatTimeZone\";\r\nimport isDateJs from \"./module/isDateJs\";\r\nimport fixNumber from \"./module/fixNumber\";\r\nimport toDate from \"./module/toDate\";\r\nimport toNumber from \"./module/toNumber\";\r\n\r\nclass DateJs{\r\n  constructor(time, config) {\r\n    DateJs.prototype.defaultConfig = {\r\n      zone: -(toDate().getTimezoneOffset() / 60)\r\n    }\r\n    DateJs.prototype.time = formatTime(time) || Date.now();\r\n    DateJs.prototype.config = {\r\n      ...this.defaultConfig,\r\n      ...(formatConfig(config))\r\n    }\r\n    DateJs.prototype.__isDate__ = true;\r\n    this.init()\r\n  }\r\n  init(){\r\n    const date = this.format();\r\n    ({\"$Y\":this.$Y,\r\n      \"$M\": this.$M,\r\n      \"$D\": this.$D,\r\n      \"$h\": this.$h,\r\n      \"$m\": this.$m,\r\n      \"$s\": this.$s,\r\n      \"$S\": this.$S,\r\n      \"$stamps\": this.$stamps,\r\n      \"$stamp\": this.$stamp,\r\n      \"$z\": this.$z\r\n    } = {\r\n      \"$Y\": upZero(date.getFullYear()),\r\n      \"$M\": upZero(date.getMonth()+1),\r\n      \"$D\": upZero(date.getDate()),\r\n      \"$h\": upZero(date.getHours()),\r\n      \"$m\": upZero(date.getMinutes()),\r\n      \"$s\": upZero(date.getSeconds()),\r\n      \"$S\": upZero(date.getMilliseconds()),\r\n      \"$stamps\": date.getTime(),\r\n      \"$stamp\": parseInt(date.getTime() / 1000),\r\n      \"$z\": this.config.zone\r\n    });\r\n  }\r\n  toZone(timezone = ''){\r\n    if (!String(timezone).length) {\r\n      this.config.zone = this.defaultConfig.zone;\r\n      return this;\r\n    };\r\n    this.config.zone = formatTimeZone(timezone)\r\n    return this;\r\n  }\r\n  format(format) {\r\n    if (!format) return toDate(this.time);\r\n    let date = toDate(this.time);\r\n    if (toNumber(this.config.zone) !== toNumber(this.defaultConfig.zone)){\r\n      date = toDate(date.getTime() + ((this.config.zone - this.defaultConfig.zone) * 60 * 60 * 1000));\r\n    }\r\n    const time = {\r\n      \"YY\": date.getFullYear().toString().slice(2),\r\n      \"YYYY\": date.getFullYear(),\r\n      \"MM\": upZero(date.getMonth()+1),\r\n      \"DD\": upZero(date.getDate()),\r\n      \"hh\": upZero(date.getHours()),\r\n      \"mm\": upZero(date.getMinutes()),\r\n      \"ss\": upZero(date.getSeconds()),\r\n      \"SS\": upZero(date.getMilliseconds().toString().slice(0,2)),\r\n      \"SSS\": upZero(date.getMilliseconds()),\r\n    }\r\n    return format.replace(/YYYY/g, time.YYYY)\r\n      .replace(/YY/g, time.YY)\r\n      .replace(/MM/g, time.MM)\r\n      .replace(/DD/g, time.DD)\r\n      .replace(/hh/g, time.hh)\r\n      .replace(/mm/g, time.mm)\r\n      .replace(/ss/g, time.ss)\r\n      .replace(/SSS/g, time.SSS)\r\n      .replace(/SS/g, time.SS);\r\n  }\r\n  stamp(){\r\n    return toDate(this.format(this.config.format)).getTime();\r\n  }\r\n\r\n  add(value) {\r\n    /*\r\n    * add 添加函数时间，接受数值、对象格式\r\n    * 传递数值时  默认当传递为需要增加的小时，\r\n    * 传递对象时，  进行数据兼容覆盖处理，\r\n    * 判断是否有day、hour、minute、second\r\n    * 如果有时 添加对应的时间，并且重新返回出去。\r\n    *\r\n    *\r\n    * */\r\n    let addObj = {\r\n      hour: value\r\n    }\r\n    if ((typeof value).toLowerCase() === 'object') {\r\n      delete addObj.hour;\r\n      addObj = value;\r\n      for (let z in addObj){\r\n        addObj[z] = fixNumber(addObj[z])\r\n      }\r\n    }\r\n    if (addObj.day) {\r\n      this.time = toDate(this.time).getTime() + (addObj.day * 24 * 60 * 60 * 1000)\r\n    }\r\n    if (addObj.hour) {\r\n      this.time = toDate(this.time).getTime() + (addObj.hour * 60 * 60 * 1000)\r\n    }\r\n    if (addObj.minute) {\r\n      this.time = toDate(this.time).getTime() + (addObj.minute * 60 * 1000)\r\n    }\r\n    if (addObj.second) {\r\n      this.time = toDate(this.time).getTime() + (addObj.second * 1000)\r\n    }\r\n    return formatTime(this.time)\r\n  }\r\n  /*\r\n  *\r\n    countDown(downTime,format,autoCount = false){\r\n    downTime = upTime(downTime);\r\n    if (this.time >= downTime){\r\n      autoCount = false;\r\n    }\r\n    if (autoCount){\r\n      this.countDownTimes = setTimeout(()=>{\r\n        console.log('countDownTime')\r\n        DateJs.prototype.time = toDate(toDate(DateJs.prototype.time).getTime() + 1000);\r\n        this.countDown(downTime,format,autoCount)\r\n      }, 1000)\r\n    }\r\n    if (!format){\r\n      if (!downTime){\r\n        return 0;\r\n      }\r\n      if (this.time - downTime <0){\r\n        return (downTime - this.time) / 1000;\r\n      }\r\n      return (this.time - downTime) / 1000;\r\n    }\r\n    let countTime = (this.time - downTime) / 1000;\r\n    if (countTime < 0){\r\n      countTime = (downTime - this.time) / 1000;\r\n    }\r\n    let d = upZero(parseInt(countTime / 60 / 60 / 24));\r\n    let h = upZero(parseInt(countTime / 60 / 60 % 24));\r\n    let m = upZero(parseInt(countTime / 60 % 60));\r\n    let s = upZero(parseInt(countTime % 60));\r\n    let formatMap = {\r\n      'DD': /DD/g.test(format),\r\n      'HH': /HH/g.test(format),\r\n      'mm': /mm/g.test(format),\r\n      'ss': /ss/g.test(format),\r\n    }\r\n    if (Object.values(formatMap).every(item=>item)){\r\n      return format.replace(/DD/g, d).replace(/HH/g, h).replace(/mm/g, m).replace(/ss/g, s);\r\n    }\r\n    if (formatMap['DD']){\r\n      return format.replace(/DD/g, d);\r\n    }else{\r\n      if (formatMap['HH']){\r\n        return format.replace(/HH/g, parseInt(countTime / 3600)).replace(/mm/g, m).replace(/ss/g, s);\r\n      }\r\n      if (formatMap['mm']){\r\n        return format.replace(/mm/g, parseInt(countTime / 60)).replace(/ss/g, s);\r\n      }\r\n      if (formatMap['ss']){\r\n        return format.replace(/ss/g, parseInt(countTime))\r\n      }\r\n    }\r\n  }\r\n  stopCountDown(){\r\n    if (this.countDownTimes){\r\n      clearTimeout(this.countDownTimes)\r\n    }\r\n  }\r\n  * */\r\n}\r\nfunction dateJs(time,config){\r\n  if (time!== window && isDateJs(time)){\r\n    return time;\r\n  }\r\n  return new DateJs(time,config)\r\n}\r\nexport default dateJs;\r\n","function formatConfig(config){\r\n  if ((typeof config).toLowerCase() === 'number'){\r\n    return {\r\n      zone: config\r\n    }\r\n  }\r\n  if ((typeof config).toLowerCase() === 'string'){\r\n\r\n    // if (zoneMap[config]){\r\n    //   return {\r\n    //     zone: zoneMap[config]\r\n    //   }\r\n    // }\r\n  }\r\n  return config;\r\n}\r\nexport default formatConfig\r\n","import toNumber from \"./toNumber\";\r\n\r\nexport default function fixNumber(num){\r\n  /*\r\n  * 过滤纠正浮点数，如果是浮点数的话， 过滤4位 然后返回出去。\r\n  *\r\n  * */\r\n  if ((typeof num).toLowerCase() === 'string'){\r\n    num = toNumber(num)\r\n  }\r\n  if (!Number.isInteger(num)){\r\n    num = toNumber(num.toFixed(4))\r\n  }\r\n  return num;\r\n}\r\n","function isDateJs(t){\r\n  if ((typeof t).toLowerCase() === 'object'){\r\n    if (t.__isDate__){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\nexport default isDateJs\r\n"],"names":["toDate","time","_typeof","toLowerCase","Date","formatTime","toString","length","replace","Number","isNaN","upZero","value","String","toNumber","parseFloat","zoneMap","DateJs","config","prototype","defaultConfig","zone","getTimezoneOffset","now","this","__isDate__","init","date","format","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getTime","parseInt","$Y","$M","$D","$h","$m","$s","$S","$stamps","$stamp","$z","timezone","slice","YYYY","YY","MM","DD","hh","mm","ss","SSS","SS","num","addObj","hour","z","isInteger","toFixed","day","minute","second","window","t"],"mappings":"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"}